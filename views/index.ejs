<!DOCTYPE html>
<html>
<head>
	<title><%= title %></title>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel='stylesheet' href='/stylesheets/style.css' />
    
        <link href="css/metro-bootstrap.css" rel="stylesheet">
    <!-- Load JavaScript Libraries -->
    <script type="text/javascript" src="javascripts/jquery.min.js"></script>
	<script type="text/javascript" src="javascripts/fence.js"></script>
	
    <script src="js/jquery/jquery.min.js"></script>
    <script src="js/jquery/jquery.widget.min.js"></script>

    <!-- Metro UI CSS JavaScript plugins -->
    <script src="js/load-metro.js"></script>
    
	<style type="text/css">
		body{
			width: 100%;
			height: 100%;
			
			font-family:"微软雅黑";
			font-size:14px;
			
		}
		a{
			background: transparent;
			text-decoration:none;
			color: red;
			
		}
		a:hover{
			text-decoration: underline;}
		#l-map {
			margin-top: 30px;
			width:100%; 
			height:100%;
			
		}
		
	</style>
	<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=A4749739227af1618f7b0d1b588c0e85"></script>
	<script type="text/javascript" src="http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js"></script>
	<script type="text/javascript" src="http://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer_min.js"></script>
	
</head>
<body class="metro" onclick="alertStop()">
	
	<% include nav %>
	<audio src="/audios/alert.wav" id="alertAudio"></audio>
	<div id="l-map"></div>
	<!-- <div id="result">
		<button id="open">打开</button><button id="close">关闭</button>
	</div> -->
	<!--城市列表-->
	<!-- <div class="sel_container"><strong id="curCity">北京市</strong> [<a id="curCityText" href="javascript:void(0)">更换城市</a>]</div> -->
	<div class="download"><a href="/androidApp/MyService.apk">点击这里下载 android App (app 里面输入 101.68.109.159)</a><div id="result"></div></div>
	
	 
	

</body>
</html>

<script type="text/javascript">
	var fence = [];
	$.ajax({
		type:"get",
		url:"fence",
		data:{data:"I am foreground"},
		error:function(err){alert(err);},
		success:success
	});
	function success(data,status)
	{
		fence = JSON.parse(data)['limit'];
	}

	var curve = null;
	function drawLine()
	{
	    
	    var points = [];
	    for(var i = 0 ;i<fence.length;i++)
	    {
	        points.push(new BMap.Point(fence[i]['longitude'],fence[i]['latitude']));
	    }
	    points.push(new BMap.Point(fence[0]['longitude'],fence[0]['latitude']));
	    map.removeOverlay(curve);
	    curve = new BMap.Polyline(points, {strokeColor:"red", strokeWeight:4, strokeOpacity:0.7}); //创建弧线对象
	    map.addOverlay(curve); //添加到地图中
	    
	}
	// 百度地图API功能
	var map = new BMap.Map("l-map");          // 创建地图实例
	var point = new BMap.Point(120.073694,30.269552);  // 创建点坐标
	map.centerAndZoom(point, 16);                 // 初始化地图，设置中心点坐标和地图级别
	
	map.enableScrollWheelZoom();
	map.addControl(new BMap.NavigationControl());  //添加默认缩放平移控件

	var top_left_control = new BMap.ScaleControl({anchor: BMAP_ANCHOR_TOP_LEFT});// 左上角，添加比例
	map.addControl(top_left_control);        
	map.clearOverlays(); 

	// 位到浏览器所在地
	var geolocation = new BMap.Geolocation();
	geolocation.getCurrentPosition(function(r){
		if(this.getStatus() == BMAP_STATUS_SUCCESS){
			var mk = new BMap.Marker(r.point);
			map.addOverlay(mk);
			map.panTo(r.point);
			
		}
		else {
			alert('failed'+this.getStatus());
		}        
	},{enableHighAccuracy: true})

	// 此部分从服务器获取坐标
	var data = new Array();

	if(typeof(EventSource)!=="undefined")
	{
		var source=new EventSource("locations");
		source.onmessage=function(event)
		{
			
			var str = event.data;
			var myData  = str.split(";");// 在每个逗号(,)处进行分解。
			
			if(str == "")
			{
				map.clearOverlays();
				document.getElementById("customerSum").innerHTML = 0;

			}
			else
			{
				document.getElementById("customerSum").innerHTML = myData.length;

				for(var i = 0;i<myData.length;i++)
				{
					data[i] = myData[i].split(",");
				}

				// var result = document.getElementById("result");
				// for(var i = 0;i<data.length;i++)
				// {
					
				// 	result.innerHTML+=data[i][1];
				// 	result.innerHTML+="   ";
				// 	result.innerHTML+=data[i][2];
				// 	result.innerHTML+="<br />";
				// }

				// 根据从服务器获取的坐标绘制点
		    	var markers = [];
			    for (var i = 0; i < data.length ; i++)
			    {
			    	
			    	var pt = null;
				    pt = new BMap.Point(Number(data[i][1]), Number(data[i][2]));
	   				markers.push(new BMap.Marker(pt));
					
			    }
			    map.clearOverlays();
			    drawLine();
				//最简单的用法，生成一个marker数组，然后调用markerClusterer类即可。
				var markerClusterer = new BMapLib.MarkerClusterer(map, {markers:markers});

			}
		};
	}
	else
	{
		alert("浏览器不支持，换个浏览器吧...");
	}

</script>



<script type="text/javascript">
var mi = 0;
var alerting = false;
var t;
// 对警报是导航栏颜色的控制
function Alert()
{
	if(alerting == true)
	{
		if(mi == 0)
		{
			
			document.getElementById("navbar").className = "navbar";
			mi = 1;
		}
		else
		{

			document.getElementById("navbar").className = "navbarAlert";
			mi = 0;
		}
		t = setTimeout("Alert()",300);
		
	}
}
// 开始警报
function alertStart()
{
	
	if(alerting == false)
	{
		alerting = true;
		document.getElementById("navbar").className = "navbar";
		document.getElementById("alertAudio").play();
		document.getElementById("alertAudio").loop="loop";
		Alert();
		
	}
	
}
// 停止警报
function alertStop()
{
	
	if(alerting == true)
	{
		alerting = false;
		clearTimeout(t);
		document.getElementById("alertAudio").pause();
		document.getElementById("alertAudio").loop="false";
		document.getElementById("navbar").className = "navbar";
	}
	
}

if(typeof(EventSource)!=="undefined")
{
	// 向服务器请求所有坐标数据
	var src = new EventSource("alert");
	src.onmessage=function(event)
	{
		
		var data = event.data;

		var alert = JSON.parse(data)['alert'];
		var longitude = JSON.parse(data)['longitude'];
		var latitude = JSON.parse(data)['latitude'];

		// var result = document.getElementById("result");
			
		// result.innerHTML+= alert;
		// result.innerHTML+= longitude;
		// result.innerHTML+= latitude;
		// result.innerHTML+="<br />";

		if(alert == "alert")
		{
			var point = new BMap.Point(Number(longitude),Number(latitude));  // 创建点坐标
			map.centerAndZoom(point, 16);                 // 初始化地图，设置中心点坐标和地图级别
			
			alertStart();
		}
		// else
		// {
		// 	alertStop();
		// }
		
	};
}





</script>